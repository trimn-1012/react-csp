{"version":3,"sources":["yupGlobal.js","App.js","reportWebVitals.js","index.js"],"names":["REGEX_PASSWORD","REGEX_ONLY_NUMBER","yup","message","this","matches","excludeEmptyString","schema","object","shape","username","string","required","email","pass","password","App","useForm","mode","resolver","yupResolver","register","handleSubmit","errors","onSubmit","data","console","log","className","H1","type","name","id","placeholder","autoComplete","ref","styled","h1","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAEMA,EAAgB,8CAChBC,EAAmB,QAEzBC,YAAcA,SAAY,YAAY,SACpCC,GAEA,OAAOC,KAAKC,QAAQL,EAAgB,CAClCG,UACAG,oBAAoB,OAIxBJ,YAAcA,SAAY,cAAc,SACtCC,GAEA,OAAOC,KAAKC,QAAQJ,EAAmB,CACrCE,UACAG,oBAAoB,OAITJ,I,EAAAA,I,eCjBTK,EAASL,EAAIM,SAASC,MAAM,CAChCC,SAAUR,EACPS,SACAC,SAAS,YACTC,MAAM,iBACTC,KAAMZ,EACHS,SACAC,SAAS,YACTG,SAAS,sBA6BCC,MA1Bf,WAAgB,IAAD,EAC8BC,YAAQ,CACjDC,KAAM,WACNC,SAAUC,sBAAYb,KAFhBc,EADK,EACLA,SAAUC,EADL,EACKA,aAAcC,EADnB,EACmBA,OAShC,OACE,uBAAMC,SAAUF,GALD,SAACG,GAChBC,QAAQC,IAAIF,MAI4BG,UAAU,MAAlD,UACE,cAACC,EAAD,oBACA,sBAAKD,UAAU,cAAf,UACE,uBAAOE,KAAK,OAAOC,KAAK,WAAWC,GAAG,WAAWC,YAAY,QAAQC,aAAa,MAAMC,IAAKd,IAC5FE,EAAOb,UAAY,mBAAGkB,UAAU,QAAb,SAAsBL,EAAOb,SAASP,aAE5D,sBAAKyB,UAAU,cAAf,UACE,uBAAOE,KAAK,WAAWC,KAAK,OAAOC,GAAG,OAAOC,YAAY,WAAWC,aAAa,MAAMC,IAAKd,IAC3FE,EAAOT,MAAQ,mBAAGc,UAAU,QAAb,SAAsBL,EAAOT,KAAKX,aAEpD,wBAAQ2B,KAAK,SAASE,GAAG,SAAzB,uBAOAH,EAAKO,IAAOC,GAAV,2CCjCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e9460d67.chunk.js","sourcesContent":["import * as yup from 'yup'\n\nconst REGEX_PASSWORD= /^(?=.*\\d)(?=.*[a-zA-Z])[\\da-zA-Z_.\\-@]{8,}$/\nconst REGEX_ONLY_NUMBER= /^\\d+$/\n\nyup.addMethod(yup.string, 'password', function (\n  message,\n) {\n  return this.matches(REGEX_PASSWORD, {\n    message,\n    excludeEmptyString: true,\n  })\n})\n\nyup.addMethod(yup.string, 'onlyNumber', function (\n  message,\n) {\n  return this.matches(REGEX_ONLY_NUMBER, {\n    message,\n    excludeEmptyString: true,\n  })\n})\n\nexport default yup","import './App.css';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport yup from './yupGlobal'\nimport styled from 'styled-components';\n\nconst schema = yup.object().shape({\n  username: yup\n    .string()\n    .required('Required')\n    .email('Email invalid'),\n  pass: yup\n    .string()\n    .required('Required')\n    .password('Password invalid'),\n})\n\nfunction App() {\n  const { register, handleSubmit, errors } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmit = (data) => {\n    console.log(data);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"box\">\n      <H1>login</H1>\n      <div className=\"input-field\">\n        <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Email\" autoComplete=\"off\" ref={register} />\n        {errors.username && <p className=\"error\">{errors.username.message}</p>}\n      </div>\n      <div className=\"input-field\">\n        <input type=\"password\" name=\"pass\" id=\"pass\" placeholder=\"Password\" autoComplete=\"off\" ref={register} />\n        {errors.pass && <p className=\"error\">{errors.pass.message}</p>}\n      </div>\n      <button type=\"submit\" id=\"submit\">LOGIN</button>\n    </form>\n  );\n}\n\nexport default App;\n\nconst H1 = styled.h1`\n  color: red;\n`","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}